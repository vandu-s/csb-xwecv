{"version":3,"sources":["components/UsernameCell.jsx","getColumns.js","App.js","index.js"],"names":["styles","root","position","padding","display","width","height","alignItems","img","minWidth","input","top","right","bottom","border","borderBottom","outline","fontSize","fontFamily","text","marginLeft","whiteSpace","overflow","textOverflow","UsernameCell","tableManager","value","onChange","isEdit","data","column","isFirstEditableCell","rowIndex","searchText","style","Fragment","src","avatar","alt","autoFocus","type","e","field","target","EDIT_SVG","viewBox","xmlns","fill","stroke","transform","d","CANCEL_SVG","SAVE_SVG","select","margin","buttonsCellContainer","justifyContent","editButton","background","cursor","borderRadius","boxShadow","buttonsCellEditorContainer","cancelButton","marginRight","saveButton","getColumns","setRowsData","id","visible","pinned","label","cellRenderer","editorCellRenderer","props","colIndex","sort","a","b","isAscending","aa","split","reverse","join","bb","sortable","resizable","title","onClick","stopPropagation","rowEditApi","setEditRowId","rowsClone","rowsApi","rows","updatedRowIndex","findIndex","r","SyncTable","useState","rowsData","isLoading","setLoading","useEffect","setTimeout","className","columns","onRowClick","event","rowSelectionApi","getIsRowSelectable","toggleRowSelection","rootElement","document","getElementById","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.a7697f27.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n  root: {\r\n    position: \"relative\",\r\n    padding: \"0 20px\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\"\r\n  },\r\n  img: { minWidth: 32 },\r\n  input: {\r\n    position: \"absolute\",\r\n    height: 28,\r\n    width: \"calc(100% - 82px)\",\r\n    top: 10,\r\n    right: 20,\r\n    bottom: 0,\r\n    border: \"none\",\r\n    borderBottom: \"1px solid #eee\",\r\n    outline: \"none\",\r\n    fontSize: 16,\r\n    padding: 0,\r\n    fontFamily: \"inherit\"\r\n  },\r\n  text: {\r\n    marginLeft: 10,\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  }\r\n};\r\nconst UsernameCell = ({\r\n  tableManager,\r\n  value,\r\n  onChange,\r\n  isEdit,\r\n  data,\r\n  column,\r\n  rowIndex,\r\n  searchText,\r\n  isFirstEditableCell\r\n}) => {\r\n  return (\r\n    <div style={styles.root}>\r\n      {isEdit ? (\r\n        <React.Fragment>\r\n          <img style={styles.img} src={data.avatar} alt=\"avatar\" />\r\n          <input\r\n            autoFocus={isFirstEditableCell}\r\n            style={styles.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) =>\r\n              onChange({ ...data, [column.field]: e.target.value })\r\n            }\r\n          />\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <img style={styles.img} src={data.avatar} alt=\"avatar\" />\r\n          <span style={styles.text}>{value}</span>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsernameCell;\r\n","import React from \"react\";\r\nimport UsernameCell from \"./components/UsernameCell\";\r\n\r\nconst EDIT_SVG = (\r\n  <svg\r\n    height=\"16\"\r\n    viewBox=\"0 0 20 20\"\r\n    width=\"16\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g fill=\"#fff\" stroke=\"#1856bf\" transform=\"translate(2 2)\">\r\n      <path\r\n        d=\"m8.24920737-.79402796c1.17157287 0 2.12132033.94974747 2.12132033 2.12132034v13.43502882l-2.12132033 3.5355339-2.08147546-3.495689-.03442539-13.47488064c-.00298547-1.16857977.94191541-2.11832105 2.11049518-2.12130651.00180188-.00000461.00360378-.00000691.00540567-.00000691z\"\r\n        transform=\"matrix(.70710678 .70710678 -.70710678 .70710678 8.605553 -3.271644)\"\r\n      />\r\n      <path d=\"m13.5 4.5 1 1\" />\r\n    </g>\r\n  </svg>\r\n);\r\nconst CANCEL_SVG = (\r\n  <svg\r\n    height=\"20\"\r\n    viewBox=\"0 0 20 20\"\r\n    width=\"20\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g fill=\"none\" stroke=\"#dc1e1e\" transform=\"translate(5 5)\">\r\n      <path d=\"m.5 10.5 10-10\" />\r\n      <path d=\"m10.5 10.5-10-10z\" />\r\n    </g>\r\n  </svg>\r\n);\r\nconst SAVE_SVG = (\r\n  <svg\r\n    height=\"20\"\r\n    viewBox=\"0 0 20 20\"\r\n    width=\"20\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"m.5 5.5 3 3 8.028-8\"\r\n      fill=\"none\"\r\n      stroke=\"#4caf50\"\r\n      transform=\"translate(5 6)\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst styles = {\r\n  select: { margin: \"0 20px\" },\r\n  buttonsCellContainer: {\r\n    padding: \"0 20px\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\"\r\n  },\r\n  editButton: {\r\n    background: \"#f3f3f3\",\r\n    outline: \"none\",\r\n    cursor: \"pointer\",\r\n    padding: 4,\r\n    display: \"inline-flex\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n    boxShadow: \"1px 1px 2px 0px rgb(0 0 0 / .3)\"\r\n  },\r\n  buttonsCellEditorContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"inline-flex\",\r\n    padding: \"0 20px\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\"\r\n  },\r\n  cancelButton: {\r\n    background: \"#f3f3f3\",\r\n    outline: \"none\",\r\n    cursor: \"pointer\",\r\n    marginRight: 10,\r\n    padding: 2,\r\n    display: \"inline-flex\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n    boxShadow: \"1px 1px 2px 0px rgb(0 0 0 / .3)\"\r\n  },\r\n  saveButton: {\r\n    background: \"#f3f3f3\",\r\n    outline: \"none\",\r\n    cursor: \"pointer\",\r\n    padding: 2,\r\n    display: \"inline-flex\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n    boxShadow: \"1px 1px 2px 0px rgb(0 0 0 / .3)\"\r\n  }\r\n};\r\n\r\nconst getColumns = ({ setRowsData }) => {\r\n  return [\r\n    {\r\n      id: \"checkbox\",\r\n      visible: true,\r\n      pinned: true,\r\n      width: \"54px\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      field: \"username\",\r\n      label: \"Username\",\r\n      cellRenderer: UsernameCell,\r\n      editorCellRenderer: (props) => <UsernameCell {...props} isEdit />\r\n    },\r\n    {\r\n      id: \"3\",\r\n      field: \"first_name\",\r\n      label: \"First Name\"\r\n    },\r\n    {\r\n      id: \"4\",\r\n      field: \"last_name\",\r\n      label: \"Last Name\"\r\n    },\r\n    {\r\n      id: \"5\",\r\n      field: \"email\",\r\n      label: \"Email\"\r\n    },\r\n    {\r\n      id: \"6\",\r\n      field: \"gender\",\r\n      label: \"Gender\",\r\n      editorCellRenderer: ({\r\n        tableManager,\r\n        value,\r\n        data,\r\n        column,\r\n        colIndex,\r\n        rowIndex,\r\n        onChange\r\n      }) => (\r\n        <select\r\n          style={styles.select}\r\n          value={value}\r\n          onChange={(e) =>\r\n            onChange({ ...data, [column.field]: e.target.value })\r\n          }\r\n        >\r\n          <option>Male</option>\r\n          <option>Female</option>\r\n        </select>\r\n      )\r\n    },\r\n    {\r\n      id: \"7\",\r\n      field: \"ip_address\",\r\n      label: \"IP Address\"\r\n    },\r\n    {\r\n      id: \"8\",\r\n      field: \"last_visited\",\r\n      label: \"Last Visited\",\r\n      sort: ({ a, b, isAscending }) => {\r\n        let aa = a.split(\"/\").reverse().join(),\r\n          bb = b.split(\"/\").reverse().join();\r\n        return aa < bb\r\n          ? isAscending\r\n            ? -1\r\n            : 1\r\n          : aa > bb\r\n          ? isAscending\r\n            ? 1\r\n            : -1\r\n          : 0;\r\n      }\r\n    },\r\n    {\r\n      id: \"buttons\",\r\n      width: \"max-content\",\r\n      pinned: true,\r\n      sortable: false,\r\n      resizable: false,\r\n      cellRenderer: ({\r\n        tableManager,\r\n        value,\r\n        data,\r\n        column,\r\n        colIndex,\r\n        rowIndex\r\n      }) => (\r\n        <div style={styles.buttonsCellContainer}>\r\n          <button\r\n            title=\"Edit\"\r\n            style={styles.editButton}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              tableManager.rowEditApi.setEditRowId(data.id);\r\n            }}\r\n          >\r\n            {EDIT_SVG}\r\n          </button>\r\n        </div>\r\n      ),\r\n      editorCellRenderer: ({\r\n        tableManager,\r\n        value,\r\n        data,\r\n        column,\r\n        colIndex,\r\n        rowIndex,\r\n        onChange\r\n      }) => (\r\n        <div style={styles.buttonsCellEditorContainer}>\r\n          <button\r\n            title=\"Cancel\"\r\n            style={styles.cancelButton}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              tableManager.rowEditApi.setEditRowId(null);\r\n            }}\r\n          >\r\n            {CANCEL_SVG}\r\n          </button>\r\n          <button\r\n            title=\"Save\"\r\n            style={styles.saveButton}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              let rowsClone = [...tableManager.rowsApi.rows];\r\n              let updatedRowIndex = rowsClone.findIndex(\r\n                (r) => r.id === data.id\r\n              );\r\n              rowsClone[updatedRowIndex] = data;\r\n              setRowsData(rowsClone);\r\n              tableManager.rowEditApi.setEditRowId(null);\r\n            }}\r\n          >\r\n            {SAVE_SVG}\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n};\r\n\r\nexport default getColumns;\r\n","import React, { useState, useEffect } from \"react\";\nimport GridTable from \"@nadavshaar/react-grid-table\";\nimport data from \"./data.json\";\nimport getColumns from \"./getColumns.js\";\nimport \"./styles.css\";\n\nconst SyncTable = () => {\n  const [rowsData, setRowsData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setRowsData(data);\n      setLoading(false);\n    }, 1500);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <GridTable\n        columns={getColumns({ setRowsData })}\n        rows={rowsData}\n        isLoading={isLoading}\n        onRowClick={({ rowIndex, data, column, isEdit, event }, tableManager) =>\n          !isEdit &&\n          tableManager.rowSelectionApi.getIsRowSelectable(data.id) &&\n          tableManager.rowSelectionApi.toggleRowSelection(data.id)\n        }\n      />\n    </div>\n  );\n};\n\nexport default SyncTable;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}